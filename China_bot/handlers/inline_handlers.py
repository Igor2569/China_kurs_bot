from aiogram import types
from aiogram.types import InputFile
from loader import dp,bot,db
import keyboards
from data import config
@dp.callback_query_handler(lambda callback:callback.data=='next_video')
async def Next_video(callback:types.CallbackQuery):
    is_second = db.fetchone(f'SELECT is_second FROM users WHERE user_id = {callback.from_user.id}')[0]
    if is_second=='true':
        await callback.answer('2 —á–∞—Å—Ç—å –∫—É—Ä—Å–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é')
        return
    else:
        number = int(db.fetchone(f'SELECT number FROM users WHERE user_id = {callback.from_user.id}')[0])
        if number==34:
            await callback.answer('–í–∞—à –∫—É—Ä—Å –æ–∫–æ–Ω—á–µ–Ω')
            return
        if number==8:
            await bot.send_message(chat_id=callback.from_user.id,
                                   text = '''–ü—Ä–∏–≤–µ—Ç! üëã–Ø —Ä–∞–¥–∞, —á—Ç–æ —Ç—ã —Å–Ω–æ–≤–∞ –∑–¥–µ—Å—å!
 –ù–∞–¥–µ—é—Å—å, –Ω–µ–¥–µ–ª—è —Å–∞–º–æ–∞–Ω–∞–ª–∏–∑–∞ –±—ã–ª–∞ 
–ø–æ–ª–µ–∑–Ω–æ–π –∏ –ø–æ–º–æ–≥–ª–∞ —Ç–µ–±–µ –ª—É—á—à–µ 
–ø–æ–Ω—è—Ç—å —Å–µ–±—è –∏ —Å–≤–æ–∏ —Ü–µ–ª–∏. 
–¢–µ–ø–µ—Ä—å —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ ‚Äî 
–¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –ø—Ä–∏–º–µ–Ω—è—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ
 –∑–Ω–∞–Ω–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ! üöÄ

–ü—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏ —É–∑–Ω–∞—Ç—å, 
–∫–∞–∫ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å —Å–≤–æ–∏ –æ—Å–æ–∑–Ω–∞–Ω–∏—è –≤
 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è. 
–Ø –≤–µ—Ä—é –≤ —Ç–µ–±—è –∏ –∑–Ω–∞—é, 
—á—Ç–æ —É —Ç–µ–±—è –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è!
 –ñ–µ–ª–∞—é –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è, —ç–Ω–µ—Ä–≥–∏–∏ 
–∏ —Å–º–µ–ª–æ—Å—Ç–∏ –Ω–∞ –ø—É—Ç–∏ –∫ –ª—É—á—à–µ–π 
–≤–µ—Ä—Å–∏–∏ —Å–µ–±—è! üíñ

–î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ —Å–¥–µ–ª–∞–µ–º —ç—Ç—É 
–Ω–µ–¥–µ–ª—é –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–π!
''')
        video_id = db.fetchone(f'SELECT video FROM videos WHERE number = {number+1}')[0]
        db.query(f"UPDATE users SET number = {number+1} WHERE user_id = {callback.from_user.id}")
        await bot.send_video(callback.from_user.id, video=video_id,
                             reply_markup=keyboards.next())
        if number==7:
            db.query(f"UPDATE users SET is_second = 'true' WHERE user_id = {callback.from_user.id}")
            print('tyt')
            await bot.send_document(
            chat_id=callback.from_user.id,
            document=InputFile('data/pdf/—Å–ª–∞–π–¥—ã –∫—É—Ä—Å–∞ –ò–¢–û–ì.pdf'))
            await bot.send_photo(callback.from_user.id, photo=InputFile('./data/photos/9.jpg'),
                                 reply_markup=keyboards.next())
        if number==27:
            await bot.send_photo(callback.from_user.id, photo=InputFile('./data/photos/29.jpg'),
                                 reply_markup=keyboards.next())
            await bot.send_photo(callback.from_user.id, photo=InputFile('./data/photos/30.jpg'),
                                 reply_markup=keyboards.next())
        if number==28:
            await bot.send_photo(callback.from_user.id, photo=InputFile('./data/photos/29_2.png'),
                                 reply_markup=keyboards.next())
        if number==33:
            await bot.send_photo(callback.from_user.id, photo=InputFile('./data/photos/17.jpg'),
                                 reply_markup=keyboards.next())
            await bot.send_message(callback.from_user.id,
                                   text = '''–ù—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ? üåπ
–ù–∞–ø–∏—à–∏ –º–Ω–µ:
@Marina_lifeKouch''')
        

@dp.callback_query_handler(lambda callback:callback.data=='payment')
async def Payment(callback:types.CallbackQuery):
    await bot.send_invoice(chat_id=callback.from_user.id,
                               title = '–ö—É—Ä—Å',
                               description = '–û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–∞',
                               payload='kurs',
                               provider_token=config.YOOTOKEN,
                               currency='RUB',
                               start_parameter='true',
                               prices=[{'label':'rub',
                                        'amount':2800000}],
                                need_email=True,
                                send_email_to_provider=True,
                                provider_data={
                                        "receipt": {
                                            "items": [
                                                {
                                                    "description": "–û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–∞",
                                                    "quantity": "1",
                                                    "amount": {
                                                        "value": "28000.00",  
                                                        "currency": "RUB"
                                                    },
                                                    "vat_code": "1",  
                                                }
                                                ]
                                        }
    })